/* Tabletop Role-Playing Game Club Club - Minimal-Class SCSS (Heavy Element Nesting) */

// Variables
$primary: #3b82f6;
$secondary: #1e40af;
$accent: #fbbf24;
$bg-main: #fef3c7;
$bg-alt: #dbeafe;
$bg-white: #fff;
$text: #000;
$border: #000;
$border-width: 4px;
$border-radius: 8px;
$shadow-offset: 8px;
$transition: all .15s ease;

// Mixins
@mixin brutal-border {
  border: $border-width solid $border;
}
@mixin brutal-height {
  border: $border-width solid $border;
  box-shadow: $shadow-offset $shadow-offset 0 $border;
}
@mixin brutal-shadow {
  box-shadow: $shadow-offset $shadow-offset 0 $border;
}
// Raise element up-left on hover while keeping the shadow visually in place.
// $px adds extra raise beyond the base $shadow-offset.
@mixin brutal-hover($px: 0px) {
  -webkit-transition: $transition;
  -moz-transition: $transition;
  -ms-transition: $transition;
  -o-transition: $transition;
  transition: $transition;
  &:hover {
    box-shadow: calc($shadow-offset + $px) calc($shadow-offset + $px) 0 $border;
    // Move element up-left by base+extra so the shadow appears stationary
    -webkit-transform: translate(-($shadow-offset + $px), -($shadow-offset + $px));
    -moz-transform: translate(-($shadow-offset + $px), -($shadow-offset + $px));
    -ms-transform: translate(-($shadow-offset + $px), -($shadow-offset + $px));
    -o-transform: translate(-($shadow-offset + $px), -($shadow-offset + $px));
    transform: translate(-($shadow-offset + $px), -($shadow-offset + $px));
  }
}

@mixin brutal-active($px: $shadow-offset) {
  -webkit-transform: translate(-$px, -$px);
  -moz-transform: translate(-$px, -$px);
  -ms-transform: translate(-$px, -$px);
  -o-transform: translate(-$px, -$px);
  transform: translate(-$px, -$px);
  box-shadow: none;
}

@mixin button-styling {
  background-color: $bg-white;
  box-sizing: border-box;
  font-weight: 800;
  line-height: 21px;
  margin: 0;
  padding: 0.5rem 1rem;
  text-transform: uppercase;
  cursor: pointer;
  color: $text;
  text-decoration: none;
  border: 4px solid $border;
  border-radius: $border-radius;
  transition: $transition;


}

%button-nav {
  @include button-styling;
  display: inline-block;
  @include brutal-height; // baseline border + shadow
  border-radius: $border-radius;
  @include brutal-hover(0px); // raise by base offset, keep shadow stationary
  &:active { @include brutal-active($shadow-offset); }
}

%button {
  @include button-styling;
  @include brutal-height;
  @include brutal-hover($shadow-offset);
  &:active {
    @include brutal-active($shadow-offset)
  }
}

%button-primary {
  @extend %button;
  background-color: $accent;
}

@mixin grid-gap {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: 2rem;
}

// Mixin for item card internals (shared by home scroller and archive grid)
@mixin item-card-structure {
  overflow: hidden;
  display: flex;
  flex-direction: column;
  padding: 0 !important;
  margin: 0;
  max-width: 30rem;

  .item-thumbnail, > div:first-child {
    width: 100%;
    height: 200px;
    overflow: hidden;
    background-color: $bg-main;
    border-bottom: $border-width solid $border;

    img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
  }

  .item-content, > div:nth-child(2) {
    padding: 1.5rem;
    flex: 1;
    display: flex;
    flex-direction: column;

    h3 {
      font-size: 1.5rem;
      margin-bottom: 1rem;
      font-weight: 900;
      text-transform: uppercase;
    }

    p {
      font-weight: 500;
      margin-bottom: .5rem;
      line-height: 1.7;
      flex: 1;
    }

    .tag-chips, > div {
      display: flex;
      flex-wrap: wrap;
      gap: .5rem;

      .meta-item, span {
        padding: .25rem .5rem;
        font-size: .75rem;
        @include brutal-border;
        background: $accent;
        border-radius: 4px;
      }
    }
  }

  > a, > a.card-btn {
    display: block;
    width: 100%;
    background-color: $accent;
    color: #000;
    font-weight: 800;
    text-transform: uppercase;
    font-size: 1rem;
    border: none;
    border-top: $border-width solid $border;
    padding: 1rem 0;
    text-align: center;
    text-decoration: none;
    transition: $transition;
  }

  &:has(> a:hover) {
    transform: translate(2px, 2px);
    box-shadow: calc($shadow-offset - 2px) calc($shadow-offset - 2px) 0 $border;
    -webkit-transform: translate(2px, 2px);
    -moz-transform: translate(2px, 2px);
    -ms-transform: translate(2px, 2px);
    -o-transform: translate(2px, 2px);
}

  &:has(> a:active) {
    transform: translate(8px, 8px);
    box-shadow: none;
    -webkit-transform: translate(8px, 8px);
    -moz-transform: translate(8px, 8px);
    -ms-transform: translate(8px, 8px);
    -o-transform: translate(8px, 8px);
}
}

// Placeholder selectors
%card {
  @include brutal-hover($shadow-offset);
  @include brutal-height;
  background-color: $bg-white;
  padding: 2rem;
}

// Placeholder for article-page "card" surfaces (TOC, body, etc.)
%article-card {
  @include brutal-hover($shadow-offset);
  @include brutal-height;
  padding: 0;
  max-width: 30rem; // so they don't cover the entire screen.
  &:has(> a:hover) {
    transform: translate($shadow-offset * 2, $shadow-offset * 2);
    box-shadow: none;
  }
}

// Reset
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  scroll-behavior: smooth;
}

body {
  font-family: 'Space Grotesk', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Arial Black', sans-serif;
  line-height: 1.5; //todo: calc for this
  color: $text;
  background-color: $bg-main;
  font-weight: 700;

  &.no-scroll {
    overflow: hidden !important;
    position: fixed;
    width: 100vw;
  }
}

::selection {
  background-color: $accent;
  color: $text;
}

*:focus-visible {
  outline: 3px solid $primary;
  outline-offset: 3px;
}

// Mobile drawer shared mixin
@mixin nav-mobile-drawer-shared() {
  display: grid;
  grid-template-rows: auto 1fr auto;
  position: fixed;
  top: 0;
  right: 0;
  height: 100dvh;
  width: 100vw;
  background: $bg-white;
  border-left: $border-width solid $border;
  box-shadow: (-$shadow-offset) 0 0 $border;
  z-index: 2000;
  transform: translateX(100%);
  transition: transform .26s cubic-bezier(.2, .8, .2, 1);
  overflow: hidden;

  &.active { transform: translateX(0); }

  // Mobile header row (icon + title)
  >div:first-child {
    display: flex;
    align-items: center;
    gap: .75rem;
    padding: 1rem 6% .75rem;
    font-weight: 900;
    text-transform: uppercase;
    letter-spacing: -.5px;
  }

  // Close button - positioned absolutely
  #navClose {
    // Inline the nav button look (avoid @extend across media queries)
    @include button-styling;
    @include brutal-hover($shadow-offset);
    &:active { @include brutal-active($shadow-offset); }
    position: absolute;
    top: 1rem;
    right: 6%;
    display: block;
  }

  ul {
    flex-direction: column;
    margin: .5rem 5% 0;
    width: 90%;
    gap: 1vh;
    min-height: 0;
    overflow-y: auto;

    a {
      // Inline the nav button look (avoid @extend across media queries)
      @include button-styling;
      @include brutal-hover($shadow-offset);

      &:active { @include brutal-active($shadow-offset); }
      display: block;
      width: calc(100% - 1rem);
      margin: .5rem;
      padding: .75rem 1rem;
    }

    // Hide register link in mobile menu
    a[href*="#register"] { display: none; }
  }

  // CTA shelf at bottom (grid row 3)
  #navCta {
    display: block;
    padding: 4% 5%;
    border-top: $border-width solid $border;
    background: $accent;

    >div {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: .75rem;

      a {
        // Inline the primary button look
        @include button-styling;
        @include brutal-height;
        @include brutal-hover($shadow-offset);
        &:active { @include brutal-active($shadow-offset); }
        background: $accent;
        color: $text;
        &[href*="register"] { background: $primary; color: $bg-white; }
      }
    }
  }
}

// Header - site navbar (top-level only)
body>header {
  background-color: $bg-white;
  color: $text;
  padding: 1rem 0.5rem;
  position: static;
  top: 0;
  z-index: 10;
  border-bottom: $border-width solid $border;

  .container {
    display: flex;
    justify-content: space-between;
    gap: 1rem;
    align-items: center;
    flex-wrap: wrap;

    // Logo (first div)
    >div:first-child {
      display: flex;
      align-items: center;
      gap: 1rem;

      h1 {
        font-size: 1.75rem;
        font-weight: 900;
        text-transform: uppercase;
        letter-spacing: -1px;
      }
    }
  }

  // Navigation (desktop defaults)
  nav { @include nav-mobile-drawer-shared(); }

  // Mobile toggle button
  button {
    @extend %button-nav;
  }
}

// (moved) nav-mobile-drawer-shared mixin is defined in the mixins section above

// Mirror header styles for <site-header> web component wrapper
site-header {
  header {
    background-color: $bg-white;
    color: $text;
    padding: 1rem 0;
    position: static;
    top: 0;
    z-index: 2;
    border-bottom: $border-width solid $border;

    .container {
      display: flex;
      justify-content: space-between;
      align-items: center;
      flex-wrap: wrap;
      gap: 1rem;
      padding: 0 2rem;

      // Logo (first div)
      >div:first-child {
        display: flex;
        align-items: center;
        gap: 1rem;

        h1 {
          font-size: 1.75rem;
          font-weight: 900;
          text-transform: uppercase;
          letter-spacing: -1px;
        }
      }
    }

  // Navigation (desktop defaults)
  nav { @include nav-mobile-drawer-shared(); }

    // Mobile toggle button
    button {
      @extend %button-nav;
      display: none;
    }
  }
}

// Sections - semantic <section> elements
section {
  border-bottom: $border-width solid $border;

  // Hero section (first section or id="hero")
  &:first-of-type,
  &[data-hero] {
    background-color: $primary;
    color: $text;
    padding: 6rem 2rem;
    text-align: center;
    position: relative;

    &::after {
      content: '';
      position: absolute;
      bottom: calc($border-width * -1);
      left: 0;
      right: 0;
      height: $shadow-offset;
      background-color: $border;
      z-index: -1;
    }

    >div {
      max-width: 800px;
      margin: 0 auto;

      h2 {
        font-size: 3.5rem;
        margin-bottom: 1.5rem;
        font-weight: 900;
        text-transform: uppercase;
        letter-spacing: -2px;
        line-height: 1.1;
      }

      p {
        font-size: 1.25rem;
        margin-bottom: 2.5rem;
        font-weight: 600;
        line-height: 1.6;
      }

      a {
        @extend %button-primary;
        display: inline-block;
      }
    }
  }

  // Content sections (using data attributes or :nth patterns)
  &[data-content],
  &:nth-of-type(2),
  &:nth-of-type(3) {
    padding: 2rem 2rem 3rem;

    &:nth-of-type(even) {
      background-color: $bg-alt;
    }

    h2 {
      font-size: 2.75rem;
      text-align: center;
      font-weight: 900;
      text-transform: uppercase;
      letter-spacing: -1px;
      margin-bottom: 2rem;
    }

    // Grid container
    .container>div {
      @include grid-gap();

      // Cards (nested divs)
      >div {
        @extend %card;
        width: 100%;

        h3 {
          font-size: 1.5rem;
          margin-bottom: 1rem;
          font-weight: 900;
          text-transform: uppercase;
        }

        p {
          font-weight: 500;
          line-height: 1.7;
        }

        ul {
          padding-left: 1.5rem;

          li {
            margin-bottom: .5rem;
            font-weight: 500;
          }
        }
      }
    }
  }

  // Dynamic sections (games/events) - use data attributes
  &[data-dynamic] {
    padding: 4rem 0;


    &[data-alt] {
      background-color: $bg-alt;
    }

    .container {

      // Header with title and link
      >div:first-child {
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        gap: 1.5rem;
        padding: 0 2rem;

        h2 {
          font-size: 2.75rem;
          margin: 0;
          font-weight: 900;
          text-transform: uppercase;
          letter-spacing: -1px;
        }

        a {
          @extend %button-nav;
          display: inline-block;

          &:hover {
            transform: translate(3px, 3px);
            box-shadow: 3px 3px 0 $border;
            -webkit-transform: translate(3px, 3px);
            -moz-transform: translate(3px, 3px);
            -ms-transform: translate(3px, 3px);
            -o-transform: translate(3px, 3px);
}

          &:active {
            transform: translate(3px, 3px);
            box-shadow: none;
            -webkit-transform: translate(3px, 3px);
            -moz-transform: translate(3px, 3px);
            -ms-transform: translate(3px, 3px);
            -o-transform: translate(3px, 3px);
}
        }
      }

      // Items scroller
      >div:last-child {
        display: flex;
        flex-wrap: nowrap;
        overflow-x: auto;
        padding: 1rem;
        gap: 1.5rem;
        margin-top: 1.5rem;
  // NOTE: Firefox-only scrollbar styling; unsupported in many Chromium/Safari versions.
  // Safe progressive enhancement, but consider a feature query or leaving a comment for maintainers.
  scrollbar-width: thin;
  scrollbar-color: $primary transparent;

        &::before,
        &::after {
          content: '';
          flex: 0 0 2rem;
          min-width: 2rem;
        }

        // Item cards
        >div {
          @extend %card;
          @include item-card-structure;
          width: 400px;
          min-width: 400px;
          flex: 0 0 400px;
          scroll-snap-align: start;
        }
      }
    }
  }

  // Resources section
  &[data-resources] {
    padding: 1rem 1rem 3rem;
    background-color: $bg-alt;

    h2 {
      font-size: 2.75rem;
      margin-bottom: 3rem;
      text-align: center;
      font-weight: 900;
      text-transform: uppercase;
      letter-spacing: -1px;
    }

    .container>div {
      @include grid-gap();

      >div {
        @extend %card;

        h3 {
          font-size: 1.5rem;
          margin-bottom: 1.5rem;
          font-weight: 900;
          text-transform: uppercase;
        }

        ul {
          list-style: none;

          li {
            margin-bottom: .875rem;
          }

          a {
            color: $text;
            text-decoration: none;
            font-weight: 600;
            border-bottom: 2px solid transparent;
            transition: $transition;

            &:hover {
              border-bottom: 2px solid $text;
              transform: translateX(2px);
            }
          }
        }
      }
    }
  }

  // CTA section
  &[data-cta] {
    background-color: $accent;
    color: $text;
    padding: 2rem;
    text-align: center;

    .container>div {
      h2 {
        font-size: 3rem;
        margin-bottom: 1.5rem;
        font-weight: 900;
        text-transform: uppercase;
        letter-spacing: -1px;
      }

      p {
        font-size: 1.25rem;
        margin-bottom: 2.5rem;
        font-weight: 600;
        max-width: 700px;
        margin-left: auto;
        margin-right: auto;
      }

      // Buttons container
      >div {
        display: flex;
        gap: 1.5rem;
        justify-content: center;
        flex-wrap: wrap;

        a {
          @extend %button-nav;
          display: inline-block;
          padding: .875rem 2rem;

          &[data-primary] {
            background-color: $accent;
            color: $text;
          }

          &:not([data-primary]) {
            background-color: $bg-white;
            color: $text;
          }

          &:hover {
            transform: translate(3px, 3px);
            box-shadow: 3px 3px 0 $border;
          }

          &:active {
            transform: translate(6px, 6px);
            box-shadow: none;
          }
        }
      }
    }
  }
}

// Footer - semantic <footer> element
footer {
  background-color: $secondary;
  color: $bg-white;
  padding: 3rem 2rem 1rem;

  .container {

    // Grid of footer columns
    >div:first-child {
      @include grid-gap();
      margin-bottom: 2rem;

      >div {
        h3 {
          font-size: 1.25rem;
          margin-bottom: 1.25rem;
          font-weight: 900;
          text-transform: uppercase;
        }

        p {
          font-weight: 600;
          line-height: 1.8;
        }

        ul {
          list-style: none;

          li {
            margin-bottom: .75rem;
          }

          a {
            color: $bg-white;
            text-decoration: none;
            font-weight: 700;
            border-bottom: 2px solid transparent;
            transition: $transition;

            &:hover {
              border-bottom: 2px solid $bg-white;
              transform: translateX(2px);
            }
          }
        }
      }
    }

    // Footer bottom
    >div:last-child {
      border-top: $border-width solid $bg-white;
      padding-top: 1.5rem;
      margin-top: 2rem;
      text-align: center;
      font-weight: 700;
    }
  }
}

// Article pages - semantic <article> element
article {

  // Article header
  >header {
    background-color: $primary;
    background-size: cover;
    background-position: center;
    padding: 3rem 2rem;
    border-bottom: $border-width solid $border;
    position: relative;
    top: auto;

    &::before {
      content: '';
      position: absolute;
      inset: 0;
      background-color: rgba(0, 0, 0, .6);
      z-index: 0;
    }

    &::after {
      content: '';
      position: absolute;
      bottom: calc($border-width * -1);
      left: 0;
      right: 0;
      height: $shadow-offset;
      background-color: $border;
      z-index: -1;
    }

    .container {
      max-width: 900px;
      position: relative;
      z-index: 1;

      // Back link
      a {
        @extend %button-nav;
      }

      h1 {
        font-size: 3rem;
        margin-bottom: 1rem;
        font-weight: 900;
        text-transform: uppercase;
        letter-spacing: -2px;
        line-height: 1.1;
        color: #fff;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, .8);
      }

      p {
        font-size: 1.25rem;
        font-weight: 600;
        margin-top: 1rem;
        color: #fff;
        text-shadow: 1px 1px 3px rgba(0, 0, 0, .8);
      }

      // Meta badges container
      >div {
        display: flex;
        gap: .3rem .5rem;
        flex-wrap: wrap;
        margin: .5rem 0;

        span {
          padding: .4rem;
          background-color: $bg-white;
          @include brutal-border;
          border-radius: $border-radius;
          font-size: .72rem;
          font-weight: 600;
          line-height: 1.1;
        }
      }
    }
  }

  // Article content area
  >div {
    padding: 2rem;
    background-color: $bg-white;

    .container {
      max-width: 1200px;
      @include grid-gap();
      display: flex !important;
      grid-template-columns: 1fr;

      // TOC (aside element)
      aside {
        background-color: $bg-main;
        border-radius: $border-radius;
        padding: 1.5rem;
        @include brutal-height;

        h3 {
          font-size: 1rem;
          font-weight: 900;
          text-transform: uppercase;
          margin-bottom: 1rem;
        }

        ul {
          list-style: none;
          padding: 0;

          li {
            margin-bottom: .5rem;
          }

          a {
            color: $text;
            text-decoration: none;
            font-weight: 600;
            font-size: .875rem;
            padding: .25rem 0;
            display: block;
            transition: $transition;

            &:hover {
              color: $primary;
              transform: translateX(4px);
            }
          }
        }
      }

      // Main content (last div)
      >div:last-child {
        @include brutal-height;
        background-color: $bg-white;
        padding: 3rem;
        line-height: 1.8;
        border-radius: $border-radius;

        h1,
        h2,
        h3,
        h4,
        h5,
        h6 {
          font-weight: 900;
          text-transform: uppercase;
          margin-top: 2rem;
          margin-bottom: 1rem;
          letter-spacing: -.5px;
        }

        h1 {
          font-size: 2.5rem;
          border-bottom: $border-width solid $border;
          padding-bottom: .5rem;
        }

        h2 {
          font-size: 2rem;
        }

        h3 {
          font-size: 1.5rem;
        }

        p,
        ul,
        ol {
          margin-bottom: 1.25rem;
          font-weight: 500;
        }

        ul,
        ol {
          padding-left: 2rem;
        }

        li {
          margin-bottom: .5rem;
        }

        strong {
          font-weight: 900;
        }

        em {
          font-style: italic;
        }

        a {
          color: $text;
          font-weight: 700;
          border-bottom: 2px solid $text;
          text-decoration: none;
          transition: $transition;

          &:hover {
            background-color: $accent;
          }
        }

        blockquote {
          border-left: $border-width solid $border;
          padding: 1.5rem;
          margin: 2rem 0;
          font-style: italic;
          background-color: $bg-main;
        }

        code {
          background-color: $bg-main;
          padding: .25rem .5rem;
          border: 2px solid $border;
          font-family: 'Courier New', monospace;
          font-weight: 700;
        }

        pre {
          background-color: $bg-main;
          padding: 1.5rem;
          @include brutal-border;
          overflow-x: auto;
          margin: 1.5rem 0;

          code {
            background: none;
            border: none;
            padding: 0;
          }
        }

        hr {
          border: none;
          border-top: $border-width solid $border;
          margin: 2rem 0;
        }
      }
    }
  }
}

// Responsive
@media (min-width: 1024px) {
  article>div .container {
    grid-template-columns: 250px 1fr;

    aside {
      position: sticky;
      top: calc(72px + 2rem);
      max-height: calc(100vh - 72px - 4rem);
      overflow-y: auto;
    }
  }
}

@media (max-width: 1024px) {
  body>header {
    .container {
      justify-content: space-between;
    }

    button {
      display: block;
      order: 3;
    }

    // Ensure the main toggle button always shows
    .container>#menuToggle {
      display: block !important;
    }

    nav { @include nav-mobile-drawer-shared(); }

    // Overlay for mobile drawer
    nav+#navOverlay {
      position: fixed;
      inset: 0;
      background: rgba(0, 0, 0, .4);
      display: none;
      z-index: 1500;
    }

    nav.active+#navOverlay {
      display: block;
    }
  }

  // Apply the same mobile nav styles to the web component
  site-header { header { nav { @include nav-mobile-drawer-shared(); } } }

  section {
    &:first-of-type h2 {
      font-size: 2.25rem;
    }

    &:first-of-type p {
      font-size: 1rem;
    // Overlay for both header types
    body>header nav+#navOverlay,
    site-header header nav+#navOverlay {
      position: fixed;
      inset: 0;
      background: rgba(0, 0, 0, .4);
      display: none;
      z-index: 1500;
    }
    body>header nav.active+#navOverlay,
    site-header header nav.active+#navOverlay { display: block; }
      }

      nav.active+#navOverlay {
        display: block;
      }
    }
  }

// ---------------------------------------------------------
// Shared utilities for archives and article class-based pages
// ---------------------------------------------------------

.loading-text {
  text-align: center;
  padding: 2rem;
  font-weight: 600;
}

// Generic grid for archive pages
.items-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
  gap: 2rem;
  margin: 1.5rem 0 0;
  padding: 0; // Remove padding so cards align to edges
  align-items: stretch;
}

// Archive cards use the same mixin as home scroller cards
.item-card {
  @extend %card;
  @include item-card-structure;
}

// Archive header band
.archive-hero {
  background-color: $primary;
  color: $text;
  padding: 3rem 2rem 2rem;
  border-bottom: $border-width solid $border;
  position: relative;

  &::after {
    content: '';
    position: absolute;
    bottom: calc($border-width * -1);
    left: 0; right: 0;
    height: $shadow-offset;
    background-color: $border;
    z-index: -1;
  }
}

.archive-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1.5rem;
  flex-wrap: wrap;
  gap: 1rem;

  h1 {
    font-size: 3rem;
    font-weight: 900;
    text-transform: uppercase;
    letter-spacing: -1px;
  }
}

.back-link {
  display: inline-block;
  margin-bottom: 1.5rem;
  color: $text;
  text-decoration: none;
  font-weight: 700;
  padding: .5rem 1rem;
  @include brutal-border;
  background-color: $bg-white;
  transition: $transition;
  text-transform: uppercase;
  font-size: .875rem;
  border-radius: $border-radius;

  &:hover { @include brutal-hover; }
  &:active { @include brutal-active; }
}
// NOTE: `.back-link` styles are duplicated again under `.article-header .container > a.back-link`.
// Prefer using this single utility class and only override layout context (e.g., margins) where needed.

.filters {
  @include brutal-height;
  display: flex;
  gap: 1.5rem;
  flex-wrap: wrap;
  align-items: flex-end;
  padding: 2rem;
  background-color: $bg-alt;
  margin-bottom: 3rem;
}

.filter-group {
  display: flex;
  flex-direction: column;
  gap: .5rem;
  min-width: 150px;
  width: max-content;

  &:first-child {
    flex: 1;
    width: auto;
    min-width: 250px;
  }

  label {
    font-weight: 700;
    text-transform: uppercase;
    font-size: .875rem;
  }
}

.filter-select, .filter-input {
  padding: .875rem 1rem;
  @include brutal-border;
  background-color: $bg-white;
  font-weight: 600;
  font-size: .95rem;
  border-radius: $border-radius;
  height: 3rem;
  font-family: inherit;
}

.filter-input { cursor: text; }

.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  height: 3rem;
  padding: 0 1rem;
  font-size: .875rem;
  text-transform: uppercase;
  cursor: pointer;
  @include brutal-border;
  border-radius: $border-radius;
  transition: $transition;
  font-weight: 800;
}

.btn-outline {
  background: $bg-white;
  color: $text;
  &:hover { @include brutal-hover; }
  &:active { @include brutal-active; }
}

.archive-section {
  padding: 4rem 2rem;

  .container { max-width: 900px; position: relative; z-index: 1; }
}

// Article page (class-based structure used in article.html)
.article-header {
  background-color: $primary;
  color: $text;
  border-bottom: $border-width solid $border;
  position: relative;
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  padding: 3rem 2rem;

  &::before {
    content: '';
    position: absolute; inset: 0;
    background-color: rgba(0,0,0,.6);
    z-index: 0;
  }
  &::after {
    content: '';
    position: absolute;
    bottom: calc($border-width * -1);
    left: 0; right: 0;
    height: $shadow-offset;
    background-color: $border;
    z-index: -1;
  }

  .container { 
    max-width: 900px; 
    position: relative; 
    z-index: 1;
    text-align: left; // ensure left alignment for inline elements like back-link
  }

  // Back button styled like nav buttons, positioned at top left
  .container > a.back-link {
    display: inline-flex; // align like nav buttons
    align-items: center;
    color: $text;
    text-decoration: none;
    font-weight: 700;
    padding: .5rem 1rem;
    @include brutal-border;
    background-color: $bg-white;
    transition: $transition;
    text-transform: uppercase;
    font-size: .875rem;
    border-radius: $border-radius;
    margin-bottom: 1.5rem;
    margin-right: auto; // ensure left alignment even if container becomes flex

    &:hover {
      @include brutal-hover;
    }

    &:active {
      @include brutal-active;
    }
  }
}

.article-title {
  font-size: 3rem;
  margin-bottom: 1rem;
  font-weight: 900;
  text-transform: uppercase;
  letter-spacing: -2px;
  line-height: 1.1;
  color: #fff;
  text-shadow: 2px 2px 4px rgba(0,0,0,.8);
  text-align: left;
}

.article-description {
  font-size: 1.25rem;
  font-weight: 600;
  margin-top: 1rem;
  color: #fff;
  text-shadow: 1px 1px 3px rgba(0,0,0,.8);
}

.article-meta {
  display: flex;
  gap: .7rem .9rem;
  flex-wrap: wrap;
  margin: .5rem 0;

  .meta-item {
    transform: scale(1.15); // Increase size of meta chips on article pages
    transform-origin: left center;
  }
}

.meta-item {
  display: inline-block;
  padding: .4rem;
  background-color: $bg-white;
  @include brutal-border;
  border-radius: $border-radius;
  font-size: .72rem;
  font-weight: 600;
  line-height: 1.1;
}

.article-content {
  padding: 2rem;
  background-color: $bg-white;
  display: flex !important;

  .container {
    max-width: 1200px; // Default constraint
    // NOTE: This is overridden later in a desktop media query with `max-width: none !important`.
    // Consider centralizing container width rules to a single place (e.g., `.article-content` section)
    // to avoid !important and opposing constraints.
  }
}

.article-layout {
  display: flex;
  flex-direction: column;
  gap: 2rem;
}

.table-of-contents {
  background-color: $bg-main;
  @extend %article-card;
  padding: 1.5rem;
  width: 100%; // Full width when stacked above article (mobile/tablet)
  min-width: 180px; // Minimum reasonable width
  max-width: 100%; // Don't overflow on mobile

  h3 {
    font-size: 1rem;
    font-weight: 900;
    text-transform: uppercase;
    margin-bottom: 1rem;
  }

  // Custom scrollbar styling for long TOCs
  &::-webkit-scrollbar {
    width: 8px;
  }
  &::-webkit-scrollbar-track {
    background: $bg-main;
    border: 2px solid $border;
    border-radius: 4px;
  }
  &::-webkit-scrollbar-thumb {
    background: $primary;
    border: 2px solid $border;
    border-radius: 4px;
  }
  &::-webkit-scrollbar-thumb:hover {
    background: $secondary;
  }

  // Firefox scrollbar
  // NOTE: Firefox-only properties; keep as progressive enhancement. WebKit variant is above.
  scrollbar-width: thin;
  scrollbar-color: $primary $bg-main;
}

.toc-list { list-style: none; padding: 0; margin: 0; }
.toc-item { margin-bottom: .5rem; }
.toc-h2 { padding-left: 0; }
.toc-h3 { padding-left: 1rem; }
.toc-h4 { padding-left: 2rem; }
.toc-h5 { padding-left: 3rem; }
.toc-h6 { padding-left: 4rem; }

.toc-link {
  color: $text;
  text-decoration: none;
  font-weight: 600;
  font-size: .875rem;
  display: block;
  padding: .25rem 0;
  transition: $transition;
  &:hover { color: $primary; transform: translateX(4px); }
}

.article-body {
  background-color: $bg-white;
  padding: 3rem;
  @extend %article-card;
  line-height: 1.8;
  // Fluid typography: scales strongly with viewport width without breakpoints
  // Even more dramatic growth for normal text (p, li, etc.)
  font-size: clamp(1rem, 0.75rem + 1.1vw, 1.75rem);
  flex: 1; // Take remaining space in flex layout

  h1, h2, h3, h4, h5, h6 {
    font-weight: 900;
    text-transform: uppercase;
    margin-top: 2rem;
    margin-bottom: 1rem;
    letter-spacing: -.5px;
  }
  h1 { font-size: clamp(2rem, 1.6rem + 2vw, 3.5rem); border-bottom: $border-width solid $border; padding-bottom: .5rem; }
  h2 { font-size: clamp(1.5rem, 1.25rem + 1.5vw, 2.5rem); }
  h3 { font-size: clamp(1.25rem, 1.1rem + 1vw, 2rem); }
  // Paragraphs and lists inherit the fluid base size
  p, ul, ol { margin-bottom: 1.25rem; font-weight: 500; font-size: inherit; }
  ul, ol { padding-left: 2rem; }
  li { margin-bottom: .5rem; font-size: inherit; }
  strong { font-weight: 900; }
  em { font-style: italic; }
  a { color: $text; font-weight: 700; border-bottom: 2px solid $text; text-decoration: none; transition: $transition; &:hover { background-color: $accent; } }
  blockquote { border-left: $border-width solid $border; padding: 1.5rem; margin: 2rem 0; font-style: italic; background-color: $bg-main; }
  code { background-color: $bg-main; padding: .25rem .5rem; border: 2px solid $border; font-family: 'Courier New', monospace; font-weight: 700; }
  pre { background-color: $bg-main; padding: 1.5rem; @include brutal-border; overflow-x: auto; margin: 1.5rem 0; code { background: none; border: none; padding: 0; } }
  hr { border: none; border-top: $border-width solid $border; margin: 2rem 0; }
}
.article-content {
  // NOTE: Duplicate declaration; `.article-content` is defined above with padding/background.
  // If only `display:flex` is needed, consider merging into the earlier block to avoid scattering.
  display: flex !important;
}
@media (min-width: 1024px) {
  .article-layout {
    flex-direction: row; // Side by side layout on desktop
    align-items: flex-start;
    gap: 3rem;
  }
  .table-of-contents {
    position: sticky;
    top: calc(72px + 2rem);
    max-height: calc(100vh - 72px - 4rem);
    overflow-y: auto;
    z-index: 10;
    max-width: 280px; // Cap maximum width
    width: max-content; // Only as wide as content in desktop mode
    flex-shrink: 0; // Don't shrink TOC
  }
  .article-body {
    flex: 1; // Take all remaining space
    min-width: 0; // Allow flexing below natural width if needed
  }
  .article-content {
    .container {
      max-width: none !important; // Override global container constraint
      width: 100%;
      padding: 0 2rem; // Maintain side padding
    }
  }
}

// (Removed fixed breakpoints for article text size in favor of fluid clamp sizing)